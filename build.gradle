//apply plugin: 'com.android.library'



// jitpack
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
group = 'com.github.kotlin-graphics'

buildscript {

    ext.kotlinVersion = '1.1.2-2'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
    }
    dependencies {
//        classpath 'com.android.tools.build:gradle:2.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

//android {
//    compileSdkVersion 25
//    buildToolsVersion "25.0.2"
//
//    defaultConfig {
//        applicationId "uno-sdk"
//        minSdkVersion 9
//        targetSdkVersion 25
//    }
//
//    signingConfigs {
//        release {
//            def STUB = "stub"
//            //these variables should be defined in ~/.gradle/gradle.properties file
//            storeFile file(project.hasProperty("RELEASE_STORE_FILE") ? RELEASE_STORE_FILE : STUB);
//            storePassword project.hasProperty("RELEASE_STORE_PASSWORD") ? RELEASE_STORE_PASSWORD : STUB;
//            keyAlias project.hasProperty("RELEASE_KEY_ALIAS") ? RELEASE_KEY_ALIAS : STUB;
//            keyPassword project.hasProperty("RELEASE_KEY_PASSWORD") ? RELEASE_KEY_PASSWORD : STUB;
//        }
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled true
//            signingConfig signingConfigs.release
//        }
//    }
//}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    testCompile("io.kotlintest:kotlintest:2.0.0")

    compileOnly group: 'com.google.android', name: 'android', version: '4.1.1.4'

    compile 'com.github.kotlin-graphics:gli:1240840379a16bb49cf4e25ba077925d1905920b'
    compile 'com.github.kotlin-graphics:glm:8a453d9c3bee1e8aa7fee48631335ad97b94d2c1'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
    }
}

task packageSources(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts { archives packageSources }